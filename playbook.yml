---
- hosts: multi
  sudo: yes

  tasks:
    - name: Install tools
      apt: name={{ item }}
      with_items:
        - vim
        - htop

- hosts: elk
  sudo: yes

  pre_tasks:
    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=86400

    - name: Install additional packages required by ansible
      apt: name={{ item }}
      with_items:
        - python-passlib

  tasks:
    - name: Install Java 8 | add repo key
      apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=EEA14886

    - name: Install Java 8 | add repo
      apt_repository: repo="deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main"

    - name: Install Java 8 | Automatically select the Oracle License
      shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
      changed_when: false

    - name: Install Java 8 | install java
      apt: name=oracle-java8-installer state=present update_cache=yes force=yes
    
    - name: Install Java 8 | make java 8 default
      apt: name=oracle-java8-set-default state=present      

    - name: Install ES | Add Elasticsearch apt key.
      apt_key: url=http://packages.elasticsearch.org/GPG-KEY-elasticsearch

    - name: Install ES | Add Elasticsearch repository.
      apt_repository: repo="deb http://packages.elasticsearch.org/elasticsearch/1.7/debian stable main" 

    - name: Install ES | install Elasticsearch.
      apt: pkg=elasticsearch state=present

    - name: Install ES | Configure Elasticsearch.
      lineinfile: "dest=/etc/elasticsearch/elasticsearch.yml regexp='{{ item.regexp }}' line='{{ item.line }}' state=present"
      with_items:
        - { regexp: '^script\.disable_dynamic', line: 'script.disable_dynamic: true' }
        - { regexp: 'network\.host', line: 'network.host: localhost' }
      notify: restart elasticsearch
    
    - name: Install ES | start elasticsearch
      service: name=elasticsearch state=started enabled=yes

    - name: Install Kibana | add group
      group: name=kibana gid=999

    - name: Install Kibana | add user
      user: name=kibana group=kibana uid=999

    - name: Install Kibana | download version 4.1.2
      get_url: url=https://download.elastic.co/kibana/kibana/kibana-4.1.2-linux-x64.tar.gz dest=/tmp

    - name: Install Kibana | ensure target folder exists
      file: path=/opt state=directory

    - name: Install Kibana | extract archive
      unarchive: copy=false src=/tmp/kibana-4.1.2-linux-x64.tar.gz dest=/tmp creates=/opt/kibana/README.txt
   
    - name: Install Kibana | move content from extracted folder
      shell: mv /tmp/kibana-4*/ /opt/kibana creates=/opt/kibana/README.txt

    - name: Install Kibana | make kibana user the owner of the app folder
      file: path=/opt/kibana group=kibana owner=kibana recurse=yes state=directory

    - name: Install Kibana | download init script
      get_url: url=https://gist.githubusercontent.com/thisismitch/8b15ac909aed214ad04a/raw/fc5025c3fc499ad8262aff34ba7fde8c87ead7c0/kibana-4.x-init dest=/etc/init.d/kibana mode=0755

    - name: Install Kibana | download default script
      get_url: url=https://gist.githubusercontent.com/thisismitch/8b15ac909aed214ad04a/raw/fc5025c3fc499ad8262aff34ba7fde8c87ead7c0/kibana-4.x-default dest=/etc/default/kibana

    - name: Install Kibana | configure Kibana
      lineinfile: "dest=/opt/kibana/config/kibana.yml regexp='{{ item.regexp }}' line='{{ item.line }}' state=present"
      with_items:
        - { regexp: '^host', line: 'host: "localhost"' }
      notify: restart kibana

    - name: Install Kibana | make sure kibana has been started
      service: name=kibana state=started enabled=yes

    - name: Install Nginx | install packages
      apt: name={{ item }}
      with_items:
        - nginx
        - apache2-utils

    - name: Install Nginx | create admin user for kibana access
      htpasswd: path=/etc/nginx/htpasswd.users name=kibanaadmin password=qwe123

    - name: Install Nginx | configure reverse proxy entry for kibana
      copy: src=files/nginx_kibana_default dest=/etc/nginx/sites-available/default
      notify: restart nginx

    - name: Install Nginx | make sure service ist running
      service: name=nginx state=started enabled=yes

    - name: Install Logstash | add Logstash apt key
      apt_key: url=http://packages.elasticsearch.org/GPG-KEY-elasticsearch

    - name: Install Logstash | add Logstash repository
      apt_repository: repo="deb http://packages.elasticsearch.org/logstash/1.5/debian stable main"

    - name: Install Logstash | install logstash
      apt: name=logstash

    - name: Install Logstash | create certificate directory
      file: path=/etc/pki/tls/certs state=directory

    - name: Install Logstash | create private key directory
      file: path=/etc/pki/tls/private state=directory

    - name: Install Logstash | prepare openssl for cert and key gen
      lineinfile: >
        dest=/etc/ssl/openssl.cnf
        insertafter="\[\sv3_ca\s\]"
        line='subjectAltName = IP: 192.168.60.6'

    - name: Install Logstash | generate certificate
      shell: sudo openssl req -config /etc/ssl/openssl.cnf -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout private/logstash-forwarder.key -out certs/logstash-forwarder.crt
      args:
        chdir: /etc/pki/tls
        creates: /etc/pki/tls/private/logstash-forwarder.key 

    - name: Install Logstash | add initial logstash configuration files
      copy: src=files/{{ item.src }} dest=/etc/logstash/conf.d/{{ item.dest }}
      with_items:
        - { src: logstash_lumberjack_input.conf, dest: 01-lumberjack-input.conf } 
        - { src: logstash_syslog.conf, dest: 10-syslog.conf } 
        - { src: logstash_lumberjack_output.conf, dest: 30-lumberjack-output.conf } 
      notify: restart logstash

    - name: Install Logstash | make sure logstash has been started
      service: name=logstash state=started enabled=yes


  post_tasks:
    - name: download logstash certificate
      fetch: src=/etc/pki/tls/certs/logstash-forwarder.crt dest=special/logstash-forwarder.crt flat=yes

  handlers:
    - name: restart elasticsearch
      service: name=elasticsearch state=restarted

    - name: restart kibana
      service: name=kibana state=restarted

    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart logstash
      service: name=logstash state=restarted

- hosts: service
  sudo: yes

  tasks:
    - name: Install Logstash | add Logstash apt key
      apt_key: url=http://packages.elasticsearch.org/GPG-KEY-elasticsearch

    - name: Install Logstash | add Logstash repository
      apt_repository: repo="deb http://packages.elastic.co/logstashforwarder/debian stable main"

    - name: Install Logstash | install forwarder
      apt: name=logstash-forwarder

    - name: Install Logstash | ensure that certificate target folder exists
      file: path=/etc/pki/tls/certs state=directory

    - name: Install Logstash | copy server certificate
      copy: src=special/logstash-forwarder.crt dest=/etc/pki/tls/certs/logstash-forwarder.crt

    - name: Install Logstash | configure fowarder
      template: src=templates/logstash-forwarder.conf.j2 dest=/etc/logstash-forwarder.conf
      notify: restart logstash-forwarder

    - name: Install Logstash | start logstash forwarder
      service: name=logstash-forwarder state=started enabled=yes
      
  handlers:
    - name: restart logstash-forwarder
      service: name=logstash-forwarder state=restarted
